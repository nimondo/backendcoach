package fr.coaching.maseance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ThemeExpertiseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemeExpertiseAllPropertiesEquals(ThemeExpertise expected, ThemeExpertise actual) {
        assertThemeExpertiseAutoGeneratedPropertiesEquals(expected, actual);
        assertThemeExpertiseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemeExpertiseAllUpdatablePropertiesEquals(ThemeExpertise expected, ThemeExpertise actual) {
        assertThemeExpertiseUpdatableFieldsEquals(expected, actual);
        assertThemeExpertiseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemeExpertiseAutoGeneratedPropertiesEquals(ThemeExpertise expected, ThemeExpertise actual) {
        assertThat(expected)
            .as("Verify ThemeExpertise auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemeExpertiseUpdatableFieldsEquals(ThemeExpertise expected, ThemeExpertise actual) {
        assertThat(expected)
            .as("Verify ThemeExpertise relevant properties")
            .satisfies(e -> assertThat(e.getLibelleExpertise()).as("check libelleExpertise").isEqualTo(actual.getLibelleExpertise()))
            .satisfies(e -> assertThat(e.getUrlPhoto()).as("check urlPhoto").isEqualTo(actual.getUrlPhoto()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemeExpertiseUpdatableRelationshipsEquals(ThemeExpertise expected, ThemeExpertise actual) {
        // empty method
    }
}
