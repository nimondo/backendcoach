package fr.coaching.maseance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaiementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementAllPropertiesEquals(Paiement expected, Paiement actual) {
        assertPaiementAutoGeneratedPropertiesEquals(expected, actual);
        assertPaiementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementAllUpdatablePropertiesEquals(Paiement expected, Paiement actual) {
        assertPaiementUpdatableFieldsEquals(expected, actual);
        assertPaiementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementAutoGeneratedPropertiesEquals(Paiement expected, Paiement actual) {
        assertThat(expected)
            .as("Verify Paiement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementUpdatableFieldsEquals(Paiement expected, Paiement actual) {
        assertThat(expected)
            .as("Verify Paiement relevant properties")
            .satisfies(e -> assertThat(e.getHorodatage()).as("check horodatage").isEqualTo(actual.getHorodatage()))
            .satisfies(e -> assertThat(e.getMoyenPaiement()).as("check moyenPaiement").isEqualTo(actual.getMoyenPaiement()))
            .satisfies(e -> assertThat(e.getStatutPaiement()).as("check statutPaiement").isEqualTo(actual.getStatutPaiement()))
            .satisfies(e -> assertThat(e.getIdStripe()).as("check idStripe").isEqualTo(actual.getIdStripe()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementUpdatableRelationshipsEquals(Paiement expected, Paiement actual) {
        // empty method
    }
}
